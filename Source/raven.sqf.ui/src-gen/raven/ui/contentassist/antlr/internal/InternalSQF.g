/*
 * generated by Xtext
 */
grammar InternalSQF;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package raven.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package raven.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import raven.services.SQFGrammarAccess;

}

@parser::members {
 
 	private SQFGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SQFGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getElementsAssignment()); }
(rule__Model__ElementsAssignment)*
{ after(grammarAccess.getModelAccess().getElementsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCode
entryRuleCode 
:
{ before(grammarAccess.getCodeRule()); }
	 ruleCode
{ after(grammarAccess.getCodeRule()); } 
	 EOF 
;

// Rule Code
ruleCode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCodeAccess().getAlternatives()); }
(rule__Code__Alternatives)
{ after(grammarAccess.getCodeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclaration
entryRuleDeclaration 
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclarationAccess().getGroup()); }
(rule__Declaration__Group__0)
{ after(grammarAccess.getDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBracketContent
entryRuleBracketContent 
:
{ before(grammarAccess.getBracketContentRule()); }
	 ruleBracketContent
{ after(grammarAccess.getBracketContentRule()); } 
	 EOF 
;

// Rule BracketContent
ruleBracketContent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBracketContentAccess().getGroup()); }
(rule__BracketContent__Group__0)
{ after(grammarAccess.getBracketContentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDecContent
entryRuleDecContent 
:
{ before(grammarAccess.getDecContentRule()); }
	 ruleDecContent
{ after(grammarAccess.getDecContentRule()); } 
	 EOF 
;

// Rule DecContent
ruleDecContent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDecContentAccess().getGroup()); }
(rule__DecContent__Group__0)
{ after(grammarAccess.getDecContentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarContent
entryRuleVarContent 
:
{ before(grammarAccess.getVarContentRule()); }
	 ruleVarContent
{ after(grammarAccess.getVarContentRule()); } 
	 EOF 
;

// Rule VarContent
ruleVarContent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarContentAccess().getAlternatives()); }
(rule__VarContent__Alternatives)
{ after(grammarAccess.getVarContentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayLiteral
entryRuleArrayLiteral 
:
{ before(grammarAccess.getArrayLiteralRule()); }
	 ruleArrayLiteral
{ after(grammarAccess.getArrayLiteralRule()); } 
	 EOF 
;

// Rule ArrayLiteral
ruleArrayLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayLiteralAccess().getGroup()); }
(rule__ArrayLiteral__Group__0)
{ after(grammarAccess.getArrayLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleControlStructure
entryRuleControlStructure 
:
{ before(grammarAccess.getControlStructureRule()); }
	 ruleControlStructure
{ after(grammarAccess.getControlStructureRule()); } 
	 EOF 
;

// Rule ControlStructure
ruleControlStructure
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getControlStructureAccess().getAlternatives()); }
(rule__ControlStructure__Alternatives)
{ after(grammarAccess.getControlStructureAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleifType
entryRuleifType 
:
{ before(grammarAccess.getIfTypeRule()); }
	 ruleifType
{ after(grammarAccess.getIfTypeRule()); } 
	 EOF 
;

// Rule ifType
ruleifType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfTypeAccess().getGroup()); }
(rule__IfType__Group__0)
{ after(grammarAccess.getIfTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhileType
entryRuleWhileType 
:
{ before(grammarAccess.getWhileTypeRule()); }
	 ruleWhileType
{ after(grammarAccess.getWhileTypeRule()); } 
	 EOF 
;

// Rule WhileType
ruleWhileType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhileTypeAccess().getGroup()); }
(rule__WhileType__Group__0)
{ after(grammarAccess.getWhileTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForType
entryRuleForType 
:
{ before(grammarAccess.getForTypeRule()); }
	 ruleForType
{ after(grammarAccess.getForTypeRule()); } 
	 EOF 
;

// Rule ForType
ruleForType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForTypeAccess().getGroup()); }
(rule__ForType__Group__0)
{ after(grammarAccess.getForTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleforVarDeclaration
entryRuleforVarDeclaration 
:
{ before(grammarAccess.getForVarDeclarationRule()); }
	 ruleforVarDeclaration
{ after(grammarAccess.getForVarDeclarationRule()); } 
	 EOF 
;

// Rule forVarDeclaration
ruleforVarDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForVarDeclarationAccess().getNameAssignment()); }
(rule__ForVarDeclaration__NameAssignment)
{ after(grammarAccess.getForVarDeclarationAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForeachType
entryRuleForeachType 
:
{ before(grammarAccess.getForeachTypeRule()); }
	 ruleForeachType
{ after(grammarAccess.getForeachTypeRule()); } 
	 EOF 
;

// Rule ForeachType
ruleForeachType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForeachTypeAccess().getGroup()); }
(rule__ForeachType__Group__0)
{ after(grammarAccess.getForeachTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSwitchType
entryRuleSwitchType 
:
{ before(grammarAccess.getSwitchTypeRule()); }
	 ruleSwitchType
{ after(grammarAccess.getSwitchTypeRule()); } 
	 EOF 
;

// Rule SwitchType
ruleSwitchType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSwitchTypeAccess().getGroup()); }
(rule__SwitchType__Group__0)
{ after(grammarAccess.getSwitchTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethod
entryRuleMethod 
:
{ before(grammarAccess.getMethodRule()); }
	 ruleMethod
{ after(grammarAccess.getMethodRule()); } 
	 EOF 
;

// Rule Method
ruleMethod
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodAccess().getGroup()); }
(rule__Method__Group__0)
{ after(grammarAccess.getMethodAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleOPERATOR
entryRuleOPERATOR 
:
{ before(grammarAccess.getOPERATORRule()); }
	 ruleOPERATOR
{ after(grammarAccess.getOPERATORRule()); } 
	 EOF 
;

// Rule OPERATOR
ruleOPERATOR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOPERATORAccess().getAlternatives()); }
(rule__OPERATOR__Alternatives)
{ after(grammarAccess.getOPERATORAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleANYTHING
entryRuleANYTHING 
:
{ before(grammarAccess.getANYTHINGRule()); }
	 ruleANYTHING
{ after(grammarAccess.getANYTHINGRule()); } 
	 EOF 
;

// Rule ANYTHING
ruleANYTHING
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getANYTHINGAccess().getAlternatives()); }
(rule__ANYTHING__Alternatives)
{ after(grammarAccess.getANYTHINGAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBoolean
entryRuleBoolean 
:
{ before(grammarAccess.getBooleanRule()); }
	 ruleBoolean
{ after(grammarAccess.getBooleanRule()); } 
	 EOF 
;

// Rule Boolean
ruleBoolean
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanAccess().getAlternatives()); }
(rule__Boolean__Alternatives)
{ after(grammarAccess.getBooleanAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanContent
entryRuleBooleanContent 
:
{ before(grammarAccess.getBooleanContentRule()); }
	 ruleBooleanContent
{ after(grammarAccess.getBooleanContentRule()); } 
	 EOF 
;

// Rule BooleanContent
ruleBooleanContent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanContentAccess().getBoolConAssignment()); }
(rule__BooleanContent__BoolConAssignment)
{ after(grammarAccess.getBooleanContentAccess().getBoolConAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodName
entryRuleMethodName 
:
{ before(grammarAccess.getMethodNameRule()); }
	 ruleMethodName
{ after(grammarAccess.getMethodNameRule()); } 
	 EOF 
;

// Rule MethodName
ruleMethodName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodNameAccess().getRefAssignment()); }
(rule__MethodName__RefAssignment)
{ after(grammarAccess.getMethodNameAccess().getRefAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBoolCommand
entryRuleBoolCommand 
:
{ before(grammarAccess.getBoolCommandRule()); }
	 ruleBoolCommand
{ after(grammarAccess.getBoolCommandRule()); } 
	 EOF 
;

// Rule BoolCommand
ruleBoolCommand
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBoolCommandAccess().getAlternatives()); }
(rule__BoolCommand__Alternatives)
{ after(grammarAccess.getBoolCommandAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Code__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCodeAccess().getGroup_0()); }
(rule__Code__Group_0__0)
{ after(grammarAccess.getCodeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getCodeAccess().getGroup_1()); }
(rule__Code__Group_1__0)
{ after(grammarAccess.getCodeAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getCodeAccess().getGroup_2()); }
(rule__Code__Group_2__0)
{ after(grammarAccess.getCodeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DecContent__NegAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecContentAccess().getNegExclamationMarkKeyword_0_0_0()); }

	'!' 

{ after(grammarAccess.getDecContentAccess().getNegExclamationMarkKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getDecContentAccess().getNegNotKeyword_0_0_1()); }

	'not' 

{ after(grammarAccess.getDecContentAccess().getNegNotKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getGroup_0()); }
(rule__VarContent__Group_0__0)
{ after(grammarAccess.getVarContentAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getVarContentAccess().getStringAssignment_1()); }
(rule__VarContent__StringAssignment_1)
{ after(grammarAccess.getVarContentAccess().getStringAssignment_1()); }
)

    |(
{ before(grammarAccess.getVarContentAccess().getGroup_2()); }
(rule__VarContent__Group_2__0)
{ after(grammarAccess.getVarContentAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getVarContentAccess().getGroup_3()); }
(rule__VarContent__Group_3__0)
{ after(grammarAccess.getVarContentAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getVarContentAccess().getGroup_4()); }
(rule__VarContent__Group_4__0)
{ after(grammarAccess.getVarContentAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getVarContentAccess().getBoolAssignment_5()); }
(rule__VarContent__BoolAssignment_5)
{ after(grammarAccess.getVarContentAccess().getBoolAssignment_5()); }
)

    |(
{ before(grammarAccess.getVarContentAccess().getGroup_6()); }
(rule__VarContent__Group_6__0)
{ after(grammarAccess.getVarContentAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__UnOPAlternatives_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getUnOPPlusSignKeyword_0_0_0_0()); }

	'+' 

{ after(grammarAccess.getVarContentAccess().getUnOPPlusSignKeyword_0_0_0_0()); }
)

    |(
{ before(grammarAccess.getVarContentAccess().getUnOPHyphenMinusKeyword_0_0_0_1()); }

	'-' 

{ after(grammarAccess.getVarContentAccess().getUnOPHyphenMinusKeyword_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__UnOPAlternatives_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getUnOPPlusSignKeyword_2_0_0_0()); }

	'+' 

{ after(grammarAccess.getVarContentAccess().getUnOPPlusSignKeyword_2_0_0_0()); }
)

    |(
{ before(grammarAccess.getVarContentAccess().getUnOPHyphenMinusKeyword_2_0_0_1()); }

	'-' 

{ after(grammarAccess.getVarContentAccess().getUnOPHyphenMinusKeyword_2_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__Alternatives_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getReferenceAssignment_2_1_0()); }
(rule__VarContent__ReferenceAssignment_2_1_0)
{ after(grammarAccess.getVarContentAccess().getReferenceAssignment_2_1_0()); }
)

    |(
{ before(grammarAccess.getVarContentAccess().getForEachVarAssignment_2_1_1()); }
(rule__VarContent__ForEachVarAssignment_2_1_1)
{ after(grammarAccess.getVarContentAccess().getForEachVarAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__UnOPAlternatives_4_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getUnOPPlusSignKeyword_4_0_0_0()); }

	'+' 

{ after(grammarAccess.getVarContentAccess().getUnOPPlusSignKeyword_4_0_0_0()); }
)

    |(
{ before(grammarAccess.getVarContentAccess().getUnOPHyphenMinusKeyword_4_0_0_1()); }

	'-' 

{ after(grammarAccess.getVarContentAccess().getUnOPHyphenMinusKeyword_4_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ControlStructure__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlStructureAccess().getIfStatAssignment_0()); }
(rule__ControlStructure__IfStatAssignment_0)
{ after(grammarAccess.getControlStructureAccess().getIfStatAssignment_0()); }
)

    |(
{ before(grammarAccess.getControlStructureAccess().getWhileStatAssignment_1()); }
(rule__ControlStructure__WhileStatAssignment_1)
{ after(grammarAccess.getControlStructureAccess().getWhileStatAssignment_1()); }
)

    |(
{ before(grammarAccess.getControlStructureAccess().getForStatAssignment_2()); }
(rule__ControlStructure__ForStatAssignment_2)
{ after(grammarAccess.getControlStructureAccess().getForStatAssignment_2()); }
)

    |(
{ before(grammarAccess.getControlStructureAccess().getForEachStatAssignment_3()); }
(rule__ControlStructure__ForEachStatAssignment_3)
{ after(grammarAccess.getControlStructureAccess().getForEachStatAssignment_3()); }
)

    |(
{ before(grammarAccess.getControlStructureAccess().getSwitchStatAssignment_4()); }
(rule__ControlStructure__SwitchStatAssignment_4)
{ after(grammarAccess.getControlStructureAccess().getSwitchStatAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getGroup_4_0()); }
(rule__IfType__Group_4_0__0)
{ after(grammarAccess.getIfTypeAccess().getGroup_4_0()); }
)

    |(
{ before(grammarAccess.getIfTypeAccess().getGroup_4_1()); }
(rule__IfType__Group_4_1__0)
{ after(grammarAccess.getIfTypeAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__Alternatives_4_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getGroup_4_0_1_0()); }
(rule__IfType__Group_4_0_1_0__0)
{ after(grammarAccess.getIfTypeAccess().getGroup_4_0_1_0()); }
)

    |(
{ before(grammarAccess.getIfTypeAccess().getGroup_4_0_1_1()); }
(rule__IfType__Group_4_0_1_1__0)
{ after(grammarAccess.getIfTypeAccess().getGroup_4_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getGroup_1_0()); }
(rule__ForType__Group_1_0__0)
{ after(grammarAccess.getForTypeAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getForTypeAccess().getGroup_1_1()); }
(rule__ForType__Group_1_1__0)
{ after(grammarAccess.getForTypeAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachType__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachTypeAccess().getArrayAssignment_4_0()); }
(rule__ForeachType__ArrayAssignment_4_0)
{ after(grammarAccess.getForeachTypeAccess().getArrayAssignment_4_0()); }
)

    |(
{ before(grammarAccess.getForeachTypeAccess().getArrayLiteralAssignment_4_1()); }
(rule__ForeachType__ArrayLiteralAssignment_4_1)
{ after(grammarAccess.getForeachTypeAccess().getArrayLiteralAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OPERATOR__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOPERATORAccess().getPlusSignKeyword_0()); }

	'+' 

{ after(grammarAccess.getOPERATORAccess().getPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOPERATORAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getOPERATORAccess().getHyphenMinusKeyword_1()); }
)

    |(
{ before(grammarAccess.getOPERATORAccess().getAsteriskKeyword_2()); }

	'*' 

{ after(grammarAccess.getOPERATORAccess().getAsteriskKeyword_2()); }
)

    |(
{ before(grammarAccess.getOPERATORAccess().getSolidusKeyword_3()); }

	'/' 

{ after(grammarAccess.getOPERATORAccess().getSolidusKeyword_3()); }
)

    |(
{ before(grammarAccess.getOPERATORAccess().getModKeyword_4()); }

	'mod' 

{ after(grammarAccess.getOPERATORAccess().getModKeyword_4()); }
)

    |(
{ before(grammarAccess.getOPERATORAccess().getCircumflexAccentKeyword_5()); }

	'^' 

{ after(grammarAccess.getOPERATORAccess().getCircumflexAccentKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ANYTHING__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getANYTHINGAccess().getBoolAssignment_0()); }
(rule__ANYTHING__BoolAssignment_0)
{ after(grammarAccess.getANYTHINGAccess().getBoolAssignment_0()); }
)

    |(
{ before(grammarAccess.getANYTHINGAccess().getNumAssignment_1()); }
(rule__ANYTHING__NumAssignment_1)
{ after(grammarAccess.getANYTHINGAccess().getNumAssignment_1()); }
)

    |(
{ before(grammarAccess.getANYTHINGAccess().getStringAssignment_2()); }
(rule__ANYTHING__StringAssignment_2)
{ after(grammarAccess.getANYTHINGAccess().getStringAssignment_2()); }
)

    |(
{ before(grammarAccess.getANYTHINGAccess().getReferenceAssignment_3()); }
(rule__ANYTHING__ReferenceAssignment_3)
{ after(grammarAccess.getANYTHINGAccess().getReferenceAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAccess().getBoolAssignment_0()); }
(rule__Boolean__BoolAssignment_0)
{ after(grammarAccess.getBooleanAccess().getBoolAssignment_0()); }
)

    |(
{ before(grammarAccess.getBooleanAccess().getCommandAssignment_1()); }
(rule__Boolean__CommandAssignment_1)
{ after(grammarAccess.getBooleanAccess().getCommandAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__BoolAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAccess().getBoolTrueKeyword_0_0_0()); }

	'true' 

{ after(grammarAccess.getBooleanAccess().getBoolTrueKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getBooleanAccess().getBoolFalseKeyword_0_0_1()); }

	'false' 

{ after(grammarAccess.getBooleanAccess().getBoolFalseKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BoolCommand__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolCommandAccess().getIsServerKeyword_0()); }

	'isServer' 

{ after(grammarAccess.getBoolCommandAccess().getIsServerKeyword_0()); }
)

    |(
{ before(grammarAccess.getBoolCommandAccess().getIsPlayerKeyword_1()); }

	'isPlayer' 

{ after(grammarAccess.getBoolCommandAccess().getIsPlayerKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Code__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Code__Group_0__0__Impl
	rule__Code__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Code__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCodeAccess().getDecAssignment_0_0()); }
(rule__Code__DecAssignment_0_0)
{ after(grammarAccess.getCodeAccess().getDecAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Code__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Code__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Code__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCodeAccess().getSemicolonKeyword_0_1()); }

	';' 

{ after(grammarAccess.getCodeAccess().getSemicolonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Code__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Code__Group_1__0__Impl
	rule__Code__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Code__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCodeAccess().getControlAssignment_1_0()); }
(rule__Code__ControlAssignment_1_0)
{ after(grammarAccess.getCodeAccess().getControlAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Code__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Code__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Code__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCodeAccess().getSemicolonKeyword_1_1()); }

	';' 

{ after(grammarAccess.getCodeAccess().getSemicolonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Code__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Code__Group_2__0__Impl
	rule__Code__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Code__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCodeAccess().getMethodAssignment_2_0()); }
(rule__Code__MethodAssignment_2_0)
{ after(grammarAccess.getCodeAccess().getMethodAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Code__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Code__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Code__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCodeAccess().getSemicolonKeyword_2_1()); }

	';' 

{ after(grammarAccess.getCodeAccess().getSemicolonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__0__Impl
	rule__Declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getNameAssignment_0()); }
(rule__Declaration__NameAssignment_0)
{ after(grammarAccess.getDeclarationAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__1__Impl
	rule__Declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getDeclarationAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getBrConAssignment_2()); }
(rule__Declaration__BrConAssignment_2)
{ after(grammarAccess.getDeclarationAccess().getBrConAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BracketContent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BracketContent__Group__0__Impl
	rule__BracketContent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketContent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBracketContentAccess().getDecConAssignment_0()); }
(rule__BracketContent__DecConAssignment_0)
{ after(grammarAccess.getBracketContentAccess().getDecConAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BracketContent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BracketContent__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketContent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBracketContentAccess().getGroup_1()); }
(rule__BracketContent__Group_1__0)*
{ after(grammarAccess.getBracketContentAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BracketContent__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BracketContent__Group_1__0__Impl
	rule__BracketContent__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketContent__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBracketContentAccess().getCompAssignment_1_0()); }
(rule__BracketContent__CompAssignment_1_0)
{ after(grammarAccess.getBracketContentAccess().getCompAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BracketContent__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BracketContent__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketContent__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBracketContentAccess().getContentAssignment_1_1()); }
(rule__BracketContent__ContentAssignment_1_1)
{ after(grammarAccess.getBracketContentAccess().getContentAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DecContent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DecContent__Group__0__Impl
	rule__DecContent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DecContent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecContentAccess().getNegAssignment_0()); }
(rule__DecContent__NegAssignment_0)?
{ after(grammarAccess.getDecContentAccess().getNegAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DecContent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DecContent__Group__1__Impl
	rule__DecContent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DecContent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecContentAccess().getSingleContentAssignment_1()); }
(rule__DecContent__SingleContentAssignment_1)
{ after(grammarAccess.getDecContentAccess().getSingleContentAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DecContent__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DecContent__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DecContent__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecContentAccess().getGroup_2()); }
(rule__DecContent__Group_2__0)*
{ after(grammarAccess.getDecContentAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DecContent__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DecContent__Group_2__0__Impl
	rule__DecContent__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DecContent__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecContentAccess().getOpAssignment_2_0()); }
(rule__DecContent__OpAssignment_2_0)
{ after(grammarAccess.getDecContentAccess().getOpAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DecContent__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DecContent__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DecContent__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecContentAccess().getNextConAssignment_2_1()); }
(rule__DecContent__NextConAssignment_2_1)
{ after(grammarAccess.getDecContentAccess().getNextConAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarContent__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarContent__Group_0__0__Impl
	rule__VarContent__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getUnOPAssignment_0_0()); }
(rule__VarContent__UnOPAssignment_0_0)?
{ after(grammarAccess.getVarContentAccess().getUnOPAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarContent__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarContent__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getNumAssignment_0_1()); }
(rule__VarContent__NumAssignment_0_1)
{ after(grammarAccess.getVarContentAccess().getNumAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarContent__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarContent__Group_2__0__Impl
	rule__VarContent__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getUnOPAssignment_2_0()); }
(rule__VarContent__UnOPAssignment_2_0)?
{ after(grammarAccess.getVarContentAccess().getUnOPAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarContent__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarContent__Group_2__1__Impl
	rule__VarContent__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getAlternatives_2_1()); }
(rule__VarContent__Alternatives_2_1)
{ after(grammarAccess.getVarContentAccess().getAlternatives_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarContent__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarContent__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getGroup_2_2()); }
(rule__VarContent__Group_2_2__0)?
{ after(grammarAccess.getVarContentAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VarContent__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarContent__Group_2_2__0__Impl
	rule__VarContent__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getSelAssignment_2_2_0()); }
(rule__VarContent__SelAssignment_2_2_0)
{ after(grammarAccess.getVarContentAccess().getSelAssignment_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarContent__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarContent__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getIndexAssignment_2_2_1()); }
(rule__VarContent__IndexAssignment_2_2_1)
{ after(grammarAccess.getVarContentAccess().getIndexAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarContent__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarContent__Group_3__0__Impl
	rule__VarContent__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getPlusSignKeyword_3_0()); }
(
	'+' 
)?
{ after(grammarAccess.getVarContentAccess().getPlusSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarContent__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarContent__Group_3__1__Impl
	rule__VarContent__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getArrayContentAssignment_3_1()); }
(rule__VarContent__ArrayContentAssignment_3_1)
{ after(grammarAccess.getVarContentAccess().getArrayContentAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarContent__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarContent__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getGroup_3_2()); }
(rule__VarContent__Group_3_2__0)?
{ after(grammarAccess.getVarContentAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VarContent__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarContent__Group_3_2__0__Impl
	rule__VarContent__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getExecuteAssignment_3_2_0()); }
(rule__VarContent__ExecuteAssignment_3_2_0)
{ after(grammarAccess.getVarContentAccess().getExecuteAssignment_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarContent__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarContent__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getMethodNameAssignment_3_2_1()); }
(rule__VarContent__MethodNameAssignment_3_2_1)
{ after(grammarAccess.getVarContentAccess().getMethodNameAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarContent__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarContent__Group_4__0__Impl
	rule__VarContent__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getUnOPAssignment_4_0()); }
(rule__VarContent__UnOPAssignment_4_0)?
{ after(grammarAccess.getVarContentAccess().getUnOPAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarContent__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarContent__Group_4__1__Impl
	rule__VarContent__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getEmbracedAssignment_4_1()); }
(rule__VarContent__EmbracedAssignment_4_1)
{ after(grammarAccess.getVarContentAccess().getEmbracedAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarContent__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarContent__Group_4__2__Impl
	rule__VarContent__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getEmbrConAssignment_4_2()); }
(rule__VarContent__EmbrConAssignment_4_2)
{ after(grammarAccess.getVarContentAccess().getEmbrConAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarContent__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarContent__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getRightParenthesisKeyword_4_3()); }

	')' 

{ after(grammarAccess.getVarContentAccess().getRightParenthesisKeyword_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__VarContent__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarContent__Group_6__0__Impl
	rule__VarContent__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getParamAssignment_6_0()); }
(rule__VarContent__ParamAssignment_6_0)
{ after(grammarAccess.getVarContentAccess().getParamAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarContent__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarContent__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getGroup_6_1()); }
(rule__VarContent__Group_6_1__0)?
{ after(grammarAccess.getVarContentAccess().getGroup_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarContent__Group_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarContent__Group_6_1__0__Impl
	rule__VarContent__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__Group_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getSelectKeyword_6_1_0()); }

	'select' 

{ after(grammarAccess.getVarContentAccess().getSelectKeyword_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarContent__Group_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarContent__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__Group_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getIndexAssignment_6_1_1()); }
(rule__VarContent__IndexAssignment_6_1_1)
{ after(grammarAccess.getVarContentAccess().getIndexAssignment_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArrayLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group__0__Impl
	rule__ArrayLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getConAssignment_0()); }
(rule__ArrayLiteral__ConAssignment_0)
{ after(grammarAccess.getArrayLiteralAccess().getConAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group__1__Impl
	rule__ArrayLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getGroup_1()); }
(rule__ArrayLiteral__Group_1__0)?
{ after(grammarAccess.getArrayLiteralAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getArrayLiteralAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ArrayLiteral__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group_1__0__Impl
	rule__ArrayLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getContentAssignment_1_0()); }
(rule__ArrayLiteral__ContentAssignment_1_0)
{ after(grammarAccess.getArrayLiteralAccess().getContentAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayLiteral__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getGroup_1_1()); }
(rule__ArrayLiteral__Group_1_1__0)*
{ after(grammarAccess.getArrayLiteralAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArrayLiteral__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group_1_1__0__Impl
	rule__ArrayLiteral__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getCommaKeyword_1_1_0()); }

	',' 

{ after(grammarAccess.getArrayLiteralAccess().getCommaKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayLiteral__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getNextContentAssignment_1_1_1()); }
(rule__ArrayLiteral__NextContentAssignment_1_1_1)
{ after(grammarAccess.getArrayLiteralAccess().getNextContentAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IfType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfType__Group__0__Impl
	rule__IfType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIfTypeAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfType__Group__1__Impl
	rule__IfType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getIfTypeAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfType__Group__2__Impl
	rule__IfType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getConditionAssignment_2()); }
(rule__IfType__ConditionAssignment_2)
{ after(grammarAccess.getIfTypeAccess().getConditionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfType__Group__3__Impl
	rule__IfType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getIfTypeAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getAlternatives_4()); }
(rule__IfType__Alternatives_4)
{ after(grammarAccess.getIfTypeAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__IfType__Group_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfType__Group_4_0__0__Impl
	rule__IfType__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__Group_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getThenKeyword_4_0_0()); }

	'then' 

{ after(grammarAccess.getIfTypeAccess().getThenKeyword_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfType__Group_4_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfType__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__Group_4_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getAlternatives_4_0_1()); }
(rule__IfType__Alternatives_4_0_1)
{ after(grammarAccess.getIfTypeAccess().getAlternatives_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IfType__Group_4_0_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfType__Group_4_0_1_0__0__Impl
	rule__IfType__Group_4_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__Group_4_0_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getLeftCurlyBracketKeyword_4_0_1_0_0()); }

	'{' 

{ after(grammarAccess.getIfTypeAccess().getLeftCurlyBracketKeyword_4_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfType__Group_4_0_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfType__Group_4_0_1_0__1__Impl
	rule__IfType__Group_4_0_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__Group_4_0_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getThenCodeAssignment_4_0_1_0_1()); }
(rule__IfType__ThenCodeAssignment_4_0_1_0_1)*
{ after(grammarAccess.getIfTypeAccess().getThenCodeAssignment_4_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfType__Group_4_0_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfType__Group_4_0_1_0__2__Impl
	rule__IfType__Group_4_0_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__Group_4_0_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getRightCurlyBracketKeyword_4_0_1_0_2()); }

	'}' 

{ after(grammarAccess.getIfTypeAccess().getRightCurlyBracketKeyword_4_0_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfType__Group_4_0_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfType__Group_4_0_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__Group_4_0_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getGroup_4_0_1_0_3()); }
(rule__IfType__Group_4_0_1_0_3__0)?
{ after(grammarAccess.getIfTypeAccess().getGroup_4_0_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IfType__Group_4_0_1_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfType__Group_4_0_1_0_3__0__Impl
	rule__IfType__Group_4_0_1_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__Group_4_0_1_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getElseKeyword_4_0_1_0_3_0()); }

	'else' 

{ after(grammarAccess.getIfTypeAccess().getElseKeyword_4_0_1_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfType__Group_4_0_1_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfType__Group_4_0_1_0_3__1__Impl
	rule__IfType__Group_4_0_1_0_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__Group_4_0_1_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getLeftCurlyBracketKeyword_4_0_1_0_3_1()); }

	'{' 

{ after(grammarAccess.getIfTypeAccess().getLeftCurlyBracketKeyword_4_0_1_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfType__Group_4_0_1_0_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfType__Group_4_0_1_0_3__2__Impl
	rule__IfType__Group_4_0_1_0_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__Group_4_0_1_0_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getElseCodeAssignment_4_0_1_0_3_2()); }
(rule__IfType__ElseCodeAssignment_4_0_1_0_3_2)*
{ after(grammarAccess.getIfTypeAccess().getElseCodeAssignment_4_0_1_0_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfType__Group_4_0_1_0_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfType__Group_4_0_1_0_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__Group_4_0_1_0_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getRightCurlyBracketKeyword_4_0_1_0_3_3()); }

	'}' 

{ after(grammarAccess.getIfTypeAccess().getRightCurlyBracketKeyword_4_0_1_0_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IfType__Group_4_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfType__Group_4_0_1_1__0__Impl
	rule__IfType__Group_4_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__Group_4_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getLeftSquareBracketKeyword_4_0_1_1_0()); }

	'[' 

{ after(grammarAccess.getIfTypeAccess().getLeftSquareBracketKeyword_4_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfType__Group_4_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfType__Group_4_0_1_1__1__Impl
	rule__IfType__Group_4_0_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__Group_4_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getLeftCurlyBracketKeyword_4_0_1_1_1()); }

	'{' 

{ after(grammarAccess.getIfTypeAccess().getLeftCurlyBracketKeyword_4_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfType__Group_4_0_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfType__Group_4_0_1_1__2__Impl
	rule__IfType__Group_4_0_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__Group_4_0_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getThenCodeAssignment_4_0_1_1_2()); }
(rule__IfType__ThenCodeAssignment_4_0_1_1_2)*
{ after(grammarAccess.getIfTypeAccess().getThenCodeAssignment_4_0_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfType__Group_4_0_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfType__Group_4_0_1_1__3__Impl
	rule__IfType__Group_4_0_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__Group_4_0_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getRightCurlyBracketKeyword_4_0_1_1_3()); }

	'}' 

{ after(grammarAccess.getIfTypeAccess().getRightCurlyBracketKeyword_4_0_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfType__Group_4_0_1_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfType__Group_4_0_1_1__4__Impl
	rule__IfType__Group_4_0_1_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__Group_4_0_1_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getCommaKeyword_4_0_1_1_4()); }

	',' 

{ after(grammarAccess.getIfTypeAccess().getCommaKeyword_4_0_1_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfType__Group_4_0_1_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfType__Group_4_0_1_1__5__Impl
	rule__IfType__Group_4_0_1_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__Group_4_0_1_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getLeftCurlyBracketKeyword_4_0_1_1_5()); }

	'{' 

{ after(grammarAccess.getIfTypeAccess().getLeftCurlyBracketKeyword_4_0_1_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfType__Group_4_0_1_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfType__Group_4_0_1_1__6__Impl
	rule__IfType__Group_4_0_1_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__Group_4_0_1_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getElseCodeAssignment_4_0_1_1_6()); }
(rule__IfType__ElseCodeAssignment_4_0_1_1_6)*
{ after(grammarAccess.getIfTypeAccess().getElseCodeAssignment_4_0_1_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfType__Group_4_0_1_1__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfType__Group_4_0_1_1__7__Impl
	rule__IfType__Group_4_0_1_1__8
;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__Group_4_0_1_1__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getRightCurlyBracketKeyword_4_0_1_1_7()); }

	'}' 

{ after(grammarAccess.getIfTypeAccess().getRightCurlyBracketKeyword_4_0_1_1_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfType__Group_4_0_1_1__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfType__Group_4_0_1_1__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__Group_4_0_1_1__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getRightSquareBracketKeyword_4_0_1_1_8()); }

	']' 

{ after(grammarAccess.getIfTypeAccess().getRightSquareBracketKeyword_4_0_1_1_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__IfType__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfType__Group_4_1__0__Impl
	rule__IfType__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getExitWithKeyword_4_1_0()); }

	'exitWith' 

{ after(grammarAccess.getIfTypeAccess().getExitWithKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfType__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfType__Group_4_1__1__Impl
	rule__IfType__Group_4_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getLeftCurlyBracketKeyword_4_1_1()); }

	'{' 

{ after(grammarAccess.getIfTypeAccess().getLeftCurlyBracketKeyword_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfType__Group_4_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfType__Group_4_1__2__Impl
	rule__IfType__Group_4_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__Group_4_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getExitCodeAssignment_4_1_2()); }
(rule__IfType__ExitCodeAssignment_4_1_2)*
{ after(grammarAccess.getIfTypeAccess().getExitCodeAssignment_4_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfType__Group_4_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfType__Group_4_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__Group_4_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getRightCurlyBracketKeyword_4_1_3()); }

	'}' 

{ after(grammarAccess.getIfTypeAccess().getRightCurlyBracketKeyword_4_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__WhileType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileType__Group__0__Impl
	rule__WhileType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileTypeAccess().getWhileKeyword_0()); }

	'while' 

{ after(grammarAccess.getWhileTypeAccess().getWhileKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileType__Group__1__Impl
	rule__WhileType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileTypeAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getWhileTypeAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileType__Group__2__Impl
	rule__WhileType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileTypeAccess().getConditionAssignment_2()); }
(rule__WhileType__ConditionAssignment_2)
{ after(grammarAccess.getWhileTypeAccess().getConditionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileType__Group__3__Impl
	rule__WhileType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileTypeAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getWhileTypeAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileType__Group__4__Impl
	rule__WhileType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileTypeAccess().getDoKeyword_4()); }

	'do' 

{ after(grammarAccess.getWhileTypeAccess().getDoKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileType__Group__5__Impl
	rule__WhileType__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileType__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileTypeAccess().getLeftCurlyBracketKeyword_5()); }

	'{' 

{ after(grammarAccess.getWhileTypeAccess().getLeftCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileType__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileType__Group__6__Impl
	rule__WhileType__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileType__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileTypeAccess().getLoopCodeAssignment_6()); }
(rule__WhileType__LoopCodeAssignment_6)*
{ after(grammarAccess.getWhileTypeAccess().getLoopCodeAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileType__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileType__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileType__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileTypeAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getWhileTypeAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__ForType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForType__Group__0__Impl
	rule__ForType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getForKeyword_0()); }

	'for' 

{ after(grammarAccess.getForTypeAccess().getForKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForType__Group__1__Impl
	rule__ForType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getAlternatives_1()); }
(rule__ForType__Alternatives_1)
{ after(grammarAccess.getForTypeAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForType__Group__2__Impl
	rule__ForType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getDoKeyword_2()); }

	'do' 

{ after(grammarAccess.getForTypeAccess().getDoKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForType__Group__3__Impl
	rule__ForType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getForTypeAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForType__Group__4__Impl
	rule__ForType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getLoopCodeAssignment_4()); }
(rule__ForType__LoopCodeAssignment_4)*
{ after(grammarAccess.getForTypeAccess().getLoopCodeAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForType__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getForTypeAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ForType__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForType__Group_1_0__0__Impl
	rule__ForType__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getLeftSquareBracketKeyword_1_0_0()); }

	'[' 

{ after(grammarAccess.getForTypeAccess().getLeftSquareBracketKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForType__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForType__Group_1_0__1__Impl
	rule__ForType__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getLeftCurlyBracketKeyword_1_0_1()); }

	'{' 

{ after(grammarAccess.getForTypeAccess().getLeftCurlyBracketKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForType__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForType__Group_1_0__2__Impl
	rule__ForType__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getBeginAssignment_1_0_2()); }
(rule__ForType__BeginAssignment_1_0_2)
{ after(grammarAccess.getForTypeAccess().getBeginAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForType__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForType__Group_1_0__3__Impl
	rule__ForType__Group_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getRightCurlyBracketKeyword_1_0_3()); }

	'}' 

{ after(grammarAccess.getForTypeAccess().getRightCurlyBracketKeyword_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForType__Group_1_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForType__Group_1_0__4__Impl
	rule__ForType__Group_1_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__Group_1_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getCommaKeyword_1_0_4()); }

	',' 

{ after(grammarAccess.getForTypeAccess().getCommaKeyword_1_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForType__Group_1_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForType__Group_1_0__5__Impl
	rule__ForType__Group_1_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__Group_1_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getLeftCurlyBracketKeyword_1_0_5()); }

	'{' 

{ after(grammarAccess.getForTypeAccess().getLeftCurlyBracketKeyword_1_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForType__Group_1_0__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForType__Group_1_0__6__Impl
	rule__ForType__Group_1_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__Group_1_0__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getConditionAssignment_1_0_6()); }
(rule__ForType__ConditionAssignment_1_0_6)
{ after(grammarAccess.getForTypeAccess().getConditionAssignment_1_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForType__Group_1_0__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForType__Group_1_0__7__Impl
	rule__ForType__Group_1_0__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__Group_1_0__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getRightCurlyBracketKeyword_1_0_7()); }

	'}' 

{ after(grammarAccess.getForTypeAccess().getRightCurlyBracketKeyword_1_0_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForType__Group_1_0__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForType__Group_1_0__8__Impl
	rule__ForType__Group_1_0__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__Group_1_0__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getCommaKeyword_1_0_8()); }

	',' 

{ after(grammarAccess.getForTypeAccess().getCommaKeyword_1_0_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForType__Group_1_0__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForType__Group_1_0__9__Impl
	rule__ForType__Group_1_0__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__Group_1_0__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getLeftCurlyBracketKeyword_1_0_9()); }

	'{' 

{ after(grammarAccess.getForTypeAccess().getLeftCurlyBracketKeyword_1_0_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForType__Group_1_0__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForType__Group_1_0__10__Impl
	rule__ForType__Group_1_0__11
;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__Group_1_0__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getEndAssignment_1_0_10()); }
(rule__ForType__EndAssignment_1_0_10)
{ after(grammarAccess.getForTypeAccess().getEndAssignment_1_0_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForType__Group_1_0__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForType__Group_1_0__11__Impl
	rule__ForType__Group_1_0__12
;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__Group_1_0__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getRightCurlyBracketKeyword_1_0_11()); }

	'}' 

{ after(grammarAccess.getForTypeAccess().getRightCurlyBracketKeyword_1_0_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForType__Group_1_0__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForType__Group_1_0__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__Group_1_0__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getRightSquareBracketKeyword_1_0_12()); }

	']' 

{ after(grammarAccess.getForTypeAccess().getRightSquareBracketKeyword_1_0_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}




























rule__ForType__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForType__Group_1_1__0__Impl
	rule__ForType__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getForVarDeclarationParserRuleCall_1_1_0()); }
	ruleforVarDeclaration
{ after(grammarAccess.getForTypeAccess().getForVarDeclarationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForType__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForType__Group_1_1__1__Impl
	rule__ForType__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getFromKeyword_1_1_1()); }

	'from' 

{ after(grammarAccess.getForTypeAccess().getFromKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForType__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForType__Group_1_1__2__Impl
	rule__ForType__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getFromAssignment_1_1_2()); }
(rule__ForType__FromAssignment_1_1_2)
{ after(grammarAccess.getForTypeAccess().getFromAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForType__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForType__Group_1_1__3__Impl
	rule__ForType__Group_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getToKeyword_1_1_3()); }

	'to' 

{ after(grammarAccess.getForTypeAccess().getToKeyword_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForType__Group_1_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForType__Group_1_1__4__Impl
	rule__ForType__Group_1_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__Group_1_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getToAssignment_1_1_4()); }
(rule__ForType__ToAssignment_1_1_4)
{ after(grammarAccess.getForTypeAccess().getToAssignment_1_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForType__Group_1_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForType__Group_1_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__Group_1_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getGroup_1_1_5()); }
(rule__ForType__Group_1_1_5__0)?
{ after(grammarAccess.getForTypeAccess().getGroup_1_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ForType__Group_1_1_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForType__Group_1_1_5__0__Impl
	rule__ForType__Group_1_1_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__Group_1_1_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getStepKeyword_1_1_5_0()); }

	'step' 

{ after(grammarAccess.getForTypeAccess().getStepKeyword_1_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForType__Group_1_1_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForType__Group_1_1_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__Group_1_1_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getStepAssignment_1_1_5_1()); }
(rule__ForType__StepAssignment_1_1_5_1)
{ after(grammarAccess.getForTypeAccess().getStepAssignment_1_1_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ForeachType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachType__Group__0__Impl
	rule__ForeachType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachTypeAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getForeachTypeAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeachType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachType__Group__1__Impl
	rule__ForeachType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachTypeAccess().getCodeAssignment_1()); }
(rule__ForeachType__CodeAssignment_1)*
{ after(grammarAccess.getForeachTypeAccess().getCodeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeachType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachType__Group__2__Impl
	rule__ForeachType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachTypeAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getForeachTypeAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeachType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachType__Group__3__Impl
	rule__ForeachType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachTypeAccess().getForEachKeyword_3()); }

	'forEach' 

{ after(grammarAccess.getForeachTypeAccess().getForEachKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeachType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachTypeAccess().getAlternatives_4()); }
(rule__ForeachType__Alternatives_4)
{ after(grammarAccess.getForeachTypeAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SwitchType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchType__Group__0__Impl
	rule__SwitchType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchTypeAccess().getSwitchKeyword_0()); }

	'switch' 

{ after(grammarAccess.getSwitchTypeAccess().getSwitchKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchType__Group__1__Impl
	rule__SwitchType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchTypeAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getSwitchTypeAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchType__Group__2__Impl
	rule__SwitchType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchTypeAccess().getVarAssignment_2()); }
(rule__SwitchType__VarAssignment_2)
{ after(grammarAccess.getSwitchTypeAccess().getVarAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchType__Group__3__Impl
	rule__SwitchType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchTypeAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getSwitchTypeAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchType__Group__4__Impl
	rule__SwitchType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchTypeAccess().getDoKeyword_4()); }

	'do' 

{ after(grammarAccess.getSwitchTypeAccess().getDoKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchType__Group__5__Impl
	rule__SwitchType__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchType__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchTypeAccess().getLeftCurlyBracketKeyword_5()); }

	'{' 

{ after(grammarAccess.getSwitchTypeAccess().getLeftCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchType__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchType__Group__6__Impl
	rule__SwitchType__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchType__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchTypeAccess().getGroup_6()); }
(rule__SwitchType__Group_6__0)*
{ after(grammarAccess.getSwitchTypeAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchType__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchType__Group__7__Impl
	rule__SwitchType__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchType__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchTypeAccess().getGroup_7()); }
(rule__SwitchType__Group_7__0)?
{ after(grammarAccess.getSwitchTypeAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchType__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchType__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchType__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchTypeAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getSwitchTypeAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__SwitchType__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchType__Group_6__0__Impl
	rule__SwitchType__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchType__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchTypeAccess().getCaseKeyword_6_0()); }

	'case' 

{ after(grammarAccess.getSwitchTypeAccess().getCaseKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchType__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchType__Group_6__1__Impl
	rule__SwitchType__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchType__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchTypeAccess().getValueAssignment_6_1()); }
(rule__SwitchType__ValueAssignment_6_1)
{ after(grammarAccess.getSwitchTypeAccess().getValueAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchType__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchType__Group_6__2__Impl
	rule__SwitchType__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchType__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchTypeAccess().getColonKeyword_6_2()); }

	':' 

{ after(grammarAccess.getSwitchTypeAccess().getColonKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchType__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchType__Group_6__3__Impl
	rule__SwitchType__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchType__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchTypeAccess().getLeftCurlyBracketKeyword_6_3()); }

	'{' 

{ after(grammarAccess.getSwitchTypeAccess().getLeftCurlyBracketKeyword_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchType__Group_6__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchType__Group_6__4__Impl
	rule__SwitchType__Group_6__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchType__Group_6__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchTypeAccess().getCaseCodeAssignment_6_4()); }
(rule__SwitchType__CaseCodeAssignment_6_4)*
{ after(grammarAccess.getSwitchTypeAccess().getCaseCodeAssignment_6_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchType__Group_6__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchType__Group_6__5__Impl
	rule__SwitchType__Group_6__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchType__Group_6__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchTypeAccess().getRightCurlyBracketKeyword_6_5()); }

	'}' 

{ after(grammarAccess.getSwitchTypeAccess().getRightCurlyBracketKeyword_6_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchType__Group_6__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchType__Group_6__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchType__Group_6__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchTypeAccess().getSemicolonKeyword_6_6()); }

	';' 

{ after(grammarAccess.getSwitchTypeAccess().getSemicolonKeyword_6_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__SwitchType__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchType__Group_7__0__Impl
	rule__SwitchType__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchType__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchTypeAccess().getDefaultKeyword_7_0()); }

	'default' 

{ after(grammarAccess.getSwitchTypeAccess().getDefaultKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchType__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchType__Group_7__1__Impl
	rule__SwitchType__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchType__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchTypeAccess().getLeftCurlyBracketKeyword_7_1()); }

	'{' 

{ after(grammarAccess.getSwitchTypeAccess().getLeftCurlyBracketKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchType__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchType__Group_7__2__Impl
	rule__SwitchType__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchType__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchTypeAccess().getDefaultCodeAssignment_7_2()); }
(rule__SwitchType__DefaultCodeAssignment_7_2)*
{ after(grammarAccess.getSwitchTypeAccess().getDefaultCodeAssignment_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchType__Group_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchType__Group_7__3__Impl
	rule__SwitchType__Group_7__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchType__Group_7__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchTypeAccess().getRightCurlyBracketKeyword_7_3()); }

	'}' 

{ after(grammarAccess.getSwitchTypeAccess().getRightCurlyBracketKeyword_7_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchType__Group_7__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchType__Group_7__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchType__Group_7__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchTypeAccess().getSemicolonKeyword_7_4()); }

	';' 

{ after(grammarAccess.getSwitchTypeAccess().getSemicolonKeyword_7_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Method__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__0__Impl
	rule__Method__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParamsAssignment_0()); }
(rule__Method__ParamsAssignment_0)
{ after(grammarAccess.getMethodAccess().getParamsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__1__Impl
	rule__Method__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getExecuteAssignment_1()); }
(rule__Method__ExecuteAssignment_1)
{ after(grammarAccess.getMethodAccess().getExecuteAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getMethodNameAssignment_2()); }
(rule__Method__MethodNameAssignment_2)
{ after(grammarAccess.getMethodAccess().getMethodNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Model__ElementsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getElementsCodeParserRuleCall_0()); }
	ruleCode{ after(grammarAccess.getModelAccess().getElementsCodeParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Code__DecAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCodeAccess().getDecDeclarationParserRuleCall_0_0_0()); }
	ruleDeclaration{ after(grammarAccess.getCodeAccess().getDecDeclarationParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Code__ControlAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCodeAccess().getControlControlStructureParserRuleCall_1_0_0()); }
	ruleControlStructure{ after(grammarAccess.getCodeAccess().getControlControlStructureParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Code__MethodAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCodeAccess().getMethodMethodParserRuleCall_2_0_0()); }
	ruleMethod{ after(grammarAccess.getCodeAccess().getMethodMethodParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getDeclarationAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__BrConAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getBrConBracketContentParserRuleCall_2_0()); }
	ruleBracketContent{ after(grammarAccess.getDeclarationAccess().getBrConBracketContentParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BracketContent__DecConAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBracketContentAccess().getDecConDecContentParserRuleCall_0_0()); }
	ruleDecContent{ after(grammarAccess.getBracketContentAccess().getDecConDecContentParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BracketContent__CompAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBracketContentAccess().getCompCOMPARATORTerminalRuleCall_1_0_0()); }
	RULE_COMPARATOR{ after(grammarAccess.getBracketContentAccess().getCompCOMPARATORTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BracketContent__ContentAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBracketContentAccess().getContentDecContentParserRuleCall_1_1_0()); }
	ruleDecContent{ after(grammarAccess.getBracketContentAccess().getContentDecContentParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DecContent__NegAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecContentAccess().getNegAlternatives_0_0()); }
(rule__DecContent__NegAlternatives_0_0)
{ after(grammarAccess.getDecContentAccess().getNegAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DecContent__SingleContentAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecContentAccess().getSingleContentVarContentParserRuleCall_1_0()); }
	ruleVarContent{ after(grammarAccess.getDecContentAccess().getSingleContentVarContentParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DecContent__OpAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecContentAccess().getOpOPERATORParserRuleCall_2_0_0()); }
	ruleOPERATOR{ after(grammarAccess.getDecContentAccess().getOpOPERATORParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DecContent__NextConAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecContentAccess().getNextConVarContentParserRuleCall_2_1_0()); }
	ruleVarContent{ after(grammarAccess.getDecContentAccess().getNextConVarContentParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__UnOPAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getUnOPAlternatives_0_0_0()); }
(rule__VarContent__UnOPAlternatives_0_0_0)
{ after(grammarAccess.getVarContentAccess().getUnOPAlternatives_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__NumAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getNumNUMBERTerminalRuleCall_0_1_0()); }
	RULE_NUMBER{ after(grammarAccess.getVarContentAccess().getNumNUMBERTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__StringAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getStringSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getVarContentAccess().getStringSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__UnOPAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getUnOPAlternatives_2_0_0()); }
(rule__VarContent__UnOPAlternatives_2_0_0)
{ after(grammarAccess.getVarContentAccess().getUnOPAlternatives_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__ReferenceAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getReferenceDeclarationCrossReference_2_1_0_0()); }
(
{ before(grammarAccess.getVarContentAccess().getReferenceDeclarationIDTerminalRuleCall_2_1_0_0_1()); }
	RULE_ID{ after(grammarAccess.getVarContentAccess().getReferenceDeclarationIDTerminalRuleCall_2_1_0_0_1()); }
)
{ after(grammarAccess.getVarContentAccess().getReferenceDeclarationCrossReference_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__ForEachVarAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getForEachVar_xKeyword_2_1_1_0()); }
(
{ before(grammarAccess.getVarContentAccess().getForEachVar_xKeyword_2_1_1_0()); }

	'_x' 

{ after(grammarAccess.getVarContentAccess().getForEachVar_xKeyword_2_1_1_0()); }
)

{ after(grammarAccess.getVarContentAccess().getForEachVar_xKeyword_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__SelAssignment_2_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getSelSelectKeyword_2_2_0_0()); }
(
{ before(grammarAccess.getVarContentAccess().getSelSelectKeyword_2_2_0_0()); }

	'select' 

{ after(grammarAccess.getVarContentAccess().getSelSelectKeyword_2_2_0_0()); }
)

{ after(grammarAccess.getVarContentAccess().getSelSelectKeyword_2_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__IndexAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getIndexNUMBERTerminalRuleCall_2_2_1_0()); }
	RULE_NUMBER{ after(grammarAccess.getVarContentAccess().getIndexNUMBERTerminalRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__ArrayContentAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getArrayContentArrayLiteralParserRuleCall_3_1_0()); }
	ruleArrayLiteral{ after(grammarAccess.getVarContentAccess().getArrayContentArrayLiteralParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__ExecuteAssignment_3_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getExecuteCallKeyword_3_2_0_0()); }
(
{ before(grammarAccess.getVarContentAccess().getExecuteCallKeyword_3_2_0_0()); }

	'call' 

{ after(grammarAccess.getVarContentAccess().getExecuteCallKeyword_3_2_0_0()); }
)

{ after(grammarAccess.getVarContentAccess().getExecuteCallKeyword_3_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__MethodNameAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getMethodNameMethodNameParserRuleCall_3_2_1_0()); }
	ruleMethodName{ after(grammarAccess.getVarContentAccess().getMethodNameMethodNameParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__UnOPAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getUnOPAlternatives_4_0_0()); }
(rule__VarContent__UnOPAlternatives_4_0_0)
{ after(grammarAccess.getVarContentAccess().getUnOPAlternatives_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__EmbracedAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getEmbracedLeftParenthesisKeyword_4_1_0()); }
(
{ before(grammarAccess.getVarContentAccess().getEmbracedLeftParenthesisKeyword_4_1_0()); }

	'(' 

{ after(grammarAccess.getVarContentAccess().getEmbracedLeftParenthesisKeyword_4_1_0()); }
)

{ after(grammarAccess.getVarContentAccess().getEmbracedLeftParenthesisKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__EmbrConAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getEmbrConBracketContentParserRuleCall_4_2_0()); }
	ruleBracketContent{ after(grammarAccess.getVarContentAccess().getEmbrConBracketContentParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__BoolAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getBoolBooleanParserRuleCall_5_0()); }
	ruleBoolean{ after(grammarAccess.getVarContentAccess().getBoolBooleanParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__ParamAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getParam_thisKeyword_6_0_0()); }
(
{ before(grammarAccess.getVarContentAccess().getParam_thisKeyword_6_0_0()); }

	'_this' 

{ after(grammarAccess.getVarContentAccess().getParam_thisKeyword_6_0_0()); }
)

{ after(grammarAccess.getVarContentAccess().getParam_thisKeyword_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarContent__IndexAssignment_6_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarContentAccess().getIndexNUMBERTerminalRuleCall_6_1_1_0()); }
	RULE_NUMBER{ after(grammarAccess.getVarContentAccess().getIndexNUMBERTerminalRuleCall_6_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__ConAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getConLeftSquareBracketKeyword_0_0()); }
(
{ before(grammarAccess.getArrayLiteralAccess().getConLeftSquareBracketKeyword_0_0()); }

	'[' 

{ after(grammarAccess.getArrayLiteralAccess().getConLeftSquareBracketKeyword_0_0()); }
)

{ after(grammarAccess.getArrayLiteralAccess().getConLeftSquareBracketKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__ContentAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getContentVarContentParserRuleCall_1_0_0()); }
	ruleVarContent{ after(grammarAccess.getArrayLiteralAccess().getContentVarContentParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__NextContentAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getNextContentVarContentParserRuleCall_1_1_1_0()); }
	ruleVarContent{ after(grammarAccess.getArrayLiteralAccess().getNextContentVarContentParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ControlStructure__IfStatAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlStructureAccess().getIfStatIfTypeParserRuleCall_0_0()); }
	ruleifType{ after(grammarAccess.getControlStructureAccess().getIfStatIfTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ControlStructure__WhileStatAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlStructureAccess().getWhileStatWhileTypeParserRuleCall_1_0()); }
	ruleWhileType{ after(grammarAccess.getControlStructureAccess().getWhileStatWhileTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ControlStructure__ForStatAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlStructureAccess().getForStatForTypeParserRuleCall_2_0()); }
	ruleForType{ after(grammarAccess.getControlStructureAccess().getForStatForTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ControlStructure__ForEachStatAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlStructureAccess().getForEachStatForeachTypeParserRuleCall_3_0()); }
	ruleForeachType{ after(grammarAccess.getControlStructureAccess().getForEachStatForeachTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ControlStructure__SwitchStatAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getControlStructureAccess().getSwitchStatSwitchTypeParserRuleCall_4_0()); }
	ruleSwitchType{ after(grammarAccess.getControlStructureAccess().getSwitchStatSwitchTypeParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__ConditionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getConditionBooleanContentParserRuleCall_2_0()); }
	ruleBooleanContent{ after(grammarAccess.getIfTypeAccess().getConditionBooleanContentParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__ThenCodeAssignment_4_0_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getThenCodeCodeParserRuleCall_4_0_1_0_1_0()); }
	ruleCode{ after(grammarAccess.getIfTypeAccess().getThenCodeCodeParserRuleCall_4_0_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__ElseCodeAssignment_4_0_1_0_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getElseCodeCodeParserRuleCall_4_0_1_0_3_2_0()); }
	ruleCode{ after(grammarAccess.getIfTypeAccess().getElseCodeCodeParserRuleCall_4_0_1_0_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__ThenCodeAssignment_4_0_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getThenCodeCodeParserRuleCall_4_0_1_1_2_0()); }
	ruleCode{ after(grammarAccess.getIfTypeAccess().getThenCodeCodeParserRuleCall_4_0_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__ElseCodeAssignment_4_0_1_1_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getElseCodeCodeParserRuleCall_4_0_1_1_6_0()); }
	ruleCode{ after(grammarAccess.getIfTypeAccess().getElseCodeCodeParserRuleCall_4_0_1_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfType__ExitCodeAssignment_4_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTypeAccess().getExitCodeCodeParserRuleCall_4_1_2_0()); }
	ruleCode{ after(grammarAccess.getIfTypeAccess().getExitCodeCodeParserRuleCall_4_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileType__ConditionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileTypeAccess().getConditionBooleanContentParserRuleCall_2_0()); }
	ruleBooleanContent{ after(grammarAccess.getWhileTypeAccess().getConditionBooleanContentParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileType__LoopCodeAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileTypeAccess().getLoopCodeCodeParserRuleCall_6_0()); }
	ruleCode{ after(grammarAccess.getWhileTypeAccess().getLoopCodeCodeParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__BeginAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getBeginDeclarationParserRuleCall_1_0_2_0()); }
	ruleDeclaration{ after(grammarAccess.getForTypeAccess().getBeginDeclarationParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__ConditionAssignment_1_0_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getConditionBooleanContentParserRuleCall_1_0_6_0()); }
	ruleBooleanContent{ after(grammarAccess.getForTypeAccess().getConditionBooleanContentParserRuleCall_1_0_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__EndAssignment_1_0_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getEndDeclarationParserRuleCall_1_0_10_0()); }
	ruleDeclaration{ after(grammarAccess.getForTypeAccess().getEndDeclarationParserRuleCall_1_0_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__FromAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getFromNUMBERTerminalRuleCall_1_1_2_0()); }
	RULE_NUMBER{ after(grammarAccess.getForTypeAccess().getFromNUMBERTerminalRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__ToAssignment_1_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getToNUMBERTerminalRuleCall_1_1_4_0()); }
	RULE_NUMBER{ after(grammarAccess.getForTypeAccess().getToNUMBERTerminalRuleCall_1_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__StepAssignment_1_1_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getStepNUMBERTerminalRuleCall_1_1_5_1_0()); }
	RULE_NUMBER{ after(grammarAccess.getForTypeAccess().getStepNUMBERTerminalRuleCall_1_1_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForType__LoopCodeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForTypeAccess().getLoopCodeCodeParserRuleCall_4_0()); }
	ruleCode{ after(grammarAccess.getForTypeAccess().getLoopCodeCodeParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForVarDeclaration__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForVarDeclarationAccess().getNameSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getForVarDeclarationAccess().getNameSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachType__CodeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachTypeAccess().getCodeCodeParserRuleCall_1_0()); }
	ruleCode{ after(grammarAccess.getForeachTypeAccess().getCodeCodeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachType__ArrayAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachTypeAccess().getArrayDeclarationCrossReference_4_0_0()); }
(
{ before(grammarAccess.getForeachTypeAccess().getArrayDeclarationIDTerminalRuleCall_4_0_0_1()); }
	RULE_ID{ after(grammarAccess.getForeachTypeAccess().getArrayDeclarationIDTerminalRuleCall_4_0_0_1()); }
)
{ after(grammarAccess.getForeachTypeAccess().getArrayDeclarationCrossReference_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachType__ArrayLiteralAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachTypeAccess().getArrayLiteralArrayLiteralParserRuleCall_4_1_0()); }
	ruleArrayLiteral{ after(grammarAccess.getForeachTypeAccess().getArrayLiteralArrayLiteralParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchType__VarAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchTypeAccess().getVarDeclarationCrossReference_2_0()); }
(
{ before(grammarAccess.getSwitchTypeAccess().getVarDeclarationIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getSwitchTypeAccess().getVarDeclarationIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getSwitchTypeAccess().getVarDeclarationCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchType__ValueAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchTypeAccess().getValueANYTHINGParserRuleCall_6_1_0()); }
	ruleANYTHING{ after(grammarAccess.getSwitchTypeAccess().getValueANYTHINGParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchType__CaseCodeAssignment_6_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchTypeAccess().getCaseCodeCodeParserRuleCall_6_4_0()); }
	ruleCode{ after(grammarAccess.getSwitchTypeAccess().getCaseCodeCodeParserRuleCall_6_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchType__DefaultCodeAssignment_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchTypeAccess().getDefaultCodeCodeParserRuleCall_7_2_0()); }
	ruleCode{ after(grammarAccess.getSwitchTypeAccess().getDefaultCodeCodeParserRuleCall_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ParamsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParamsArrayLiteralParserRuleCall_0_0()); }
	ruleArrayLiteral{ after(grammarAccess.getMethodAccess().getParamsArrayLiteralParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ExecuteAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getExecuteSpawnKeyword_1_0()); }
(
{ before(grammarAccess.getMethodAccess().getExecuteSpawnKeyword_1_0()); }

	'spawn' 

{ after(grammarAccess.getMethodAccess().getExecuteSpawnKeyword_1_0()); }
)

{ after(grammarAccess.getMethodAccess().getExecuteSpawnKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__MethodNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getMethodNameMethodNameParserRuleCall_2_0()); }
	ruleMethodName{ after(grammarAccess.getMethodAccess().getMethodNameMethodNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ANYTHING__BoolAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getANYTHINGAccess().getBoolBooleanParserRuleCall_0_0()); }
	ruleBoolean{ after(grammarAccess.getANYTHINGAccess().getBoolBooleanParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ANYTHING__NumAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getANYTHINGAccess().getNumNUMBERTerminalRuleCall_1_0()); }
	RULE_NUMBER{ after(grammarAccess.getANYTHINGAccess().getNumNUMBERTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ANYTHING__StringAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getANYTHINGAccess().getStringSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getANYTHINGAccess().getStringSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ANYTHING__ReferenceAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getANYTHINGAccess().getReferenceDeclarationCrossReference_3_0()); }
(
{ before(grammarAccess.getANYTHINGAccess().getReferenceDeclarationIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getANYTHINGAccess().getReferenceDeclarationIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getANYTHINGAccess().getReferenceDeclarationCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__BoolAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAccess().getBoolAlternatives_0_0()); }
(rule__Boolean__BoolAlternatives_0_0)
{ after(grammarAccess.getBooleanAccess().getBoolAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__CommandAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAccess().getCommandBoolCommandParserRuleCall_1_0()); }
	ruleBoolCommand{ after(grammarAccess.getBooleanAccess().getCommandBoolCommandParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanContent__BoolConAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanContentAccess().getBoolConBracketContentParserRuleCall_0()); }
	ruleBracketContent{ after(grammarAccess.getBooleanContentAccess().getBoolConBracketContentParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodName__RefAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodNameAccess().getRefDeclarationCrossReference_0()); }
(
{ before(grammarAccess.getMethodNameAccess().getRefDeclarationIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getMethodNameAccess().getRefDeclarationIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getMethodNameAccess().getRefDeclarationCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_COMPARATOR : ('=='|'<'|'>'|'<='|'>='|'!='|'isEqualTo');

RULE_NUMBER : ('0'..'9')+ ('.' ('0'..'9')+)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;


